@page "/register"
@using BlazorApp1.Models;
@using BlazorApp1.Services;
@inject AccountService accountService;
@inject NavigationManager NavigationManager;
<h3>Register</h3>

<EditForm Model="@RegisterViewModel" OnValidSubmit="SignUp">
    <FluentValidator></FluentValidator>
    <DataAnnotationsValidator />
    <p>
        <MatTextField @bind-Value="@RegisterViewModel.Name" Label="Name"></MatTextField>
        <ValidationMessage For="@(() => RegisterViewModel.Name)" />
    </p>

    <p>
        <MatTextField @bind-Value="@RegisterViewModel.Surname" Label="Surname"></MatTextField>
        <ValidationMessage For="@(() => RegisterViewModel.Surname)" />
    </p>

    <p>
        <MatTextField @bind-Value="@RegisterViewModel.Email" Label="Email"></MatTextField>
        <ValidationMessage For="@(() => RegisterViewModel.Email)" />
    </p>

    <p>
        <MatTextField @bind-Value="@RegisterViewModel.Password" Type="Password" Label="Password"></MatTextField>
        <ValidationMessage For="@(() => RegisterViewModel.Password)" />
    </p>

    <p>
        <MatTextField @bind-Value="@RegisterViewModel.ConfirmPassword" Type="Password" Label="Confirm Password"></MatTextField>
        <ValidationMessage For="@(() => RegisterViewModel.ConfirmPassword)" />
    </p>

    <MatButton Raised="true">Sign up</MatButton>

</EditForm>

@code {
    RegisterViewModel RegisterViewModel { get; set; } = new RegisterViewModel();
    public async Task SignUp()
    {
        var res = await accountService.Register(RegisterViewModel);
        if (res.Success)
        {
            NavigationManager.NavigateTo("/Login");
        }
        else
        {
            RegisterViewModel = new RegisterViewModel();
        }
    }
}
