@page "/tours"
@using BlazorApp1.Models;
@using BlazorApp1.Services;
@using DAL;
@inject TourService tourService;

<h1>Tours</h1>

@if (tours == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>NameTour</th>
                <th>Route</th>
                <th>DateOfStart</th>
                <th>DateOfFinish</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tours in tours)
            {
                <tr>
                    <td>@tours.nameTour</td>
                    <td>@tours.route</td>
                    <td>@tours.dateOfStart</td>
                    <td>@tours.dateOfFinish</td>
                    <td>@tours.price</td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="PrevPage">Prev</button>
    <span>@pageNum</span>
    <button @onclick="NextPage">Next</button>
}

@code {
    private List<TourViewModel> tours;
    private int pageNum = 1;
    private int pageSize = 2;
    protected override async Task OnInitializedAsync()
    {
        tours = await tourService.GetAll(new PagingParameters { PageNumber = pageNum, PageSize = pageSize });
    }
    public async Task NextPage()
    {
        pageNum++;
        tours = await tourService.GetAll(new PagingParameters { PageNumber = pageNum, PageSize = pageSize });
    }
    public async Task PrevPage()
    {
        if (pageNum > 1)
        {
            pageNum--;
            tours = await tourService.GetAll(new PagingParameters { PageNumber = pageNum, PageSize = pageSize });
        }
    }
}
